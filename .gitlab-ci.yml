# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.12-alpine

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

build-DAAC:
  stage: test
  script:
    - python --version ; pip --version  # For debugging
    - apk add zip
    - apk add make
    - cd DAAC
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - make html
    - cd build
    - zip -r html.zip html
  artifacts:
    paths:
      - DAAC/build/html.zip
  rules: 
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - changes: 
        paths: 
        - DAAC/**/*

terraform-build:
  image: ubuntu:24.04
  services:
    - docker:27-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  stage: test
  script:
    - apt-get update && apt-get install -y gnupg software-properties-common wget gpg coreutils gnupg software-properties-common
    - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
    - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
    - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    - apt update -y && apt install -y terraform
    - terraform --version
    - cd iac-docker
    - terraform init
    - terraform plan -out=${CI_PROJECT_DIR}/plan.json
    - terraform show --json ${CI_PROJECT_DIR}/plan.json
  rules: 
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - changes: 
        paths: 
        - iac-docker/**/*
        - flask-docker/**/*
  artifacts:
    reports:
      terraform: plan.json


terraform-apply:
  image: ubuntu:24.04
  services:
    - docker:27-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  stage: deploy
  script:
    - apt-get update && apt-get install -y gnupg software-properties-common wget gpg coreutils gnupg software-properties-common
    - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
    - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
    - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    - apt update -y && apt install -y terraform
    - terraform --version
    - cd iac-docker
    - terraform init
    - terraform apply -auto-approve
  rules: 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - changes: 
        paths: 
        - iac-docker/**/*
        - flask-docker/**/*



